<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>EaselJS Example: Number</title>

	<!--
	<link href="assets/demoStyles.css" rel="stylesheet" type="text/css" />
	-->
	
	<script src="EaselJS/lib/easeljs-0.6.1.min.js"></script>
	<script src="PreloadJS/lib/preloadjs-0.3.1.min.js"></script>
	<script src="SoundJS/lib/soundjs-0.4.1.min.js"></script>
	<script src="TweenJS/lib/tweenjs-0.4.1.min.js"></script>

	<script>
	var canvas;
	var stage;
	var txt;
	var bitmap1;
	var bitmap2;
	var bitmap3;
	var bitmap4;
	var bitmap5;

	var bitmap_popup1;

	var x=4;
	var y=3;
	var dx=2;
	var dx2=3;
	var dy=3;
	var dy2=4;
	var dx3=2;
	var dy3=3;

	var container;
	var bmp1;
	var bmp2;

	var globalCounter=1;
	var bitmapElement;
	var objInfo;
	
	var queue;
	var bgmInstance;

	function init() {
		canvas = document.getElementById("testCanvas");
		stage = new createjs.Stage(canvas);
		
		//using preloadjs to pre-load the sounds
		queue = new createjs.LoadQueue(true);
		queue.installPlugin(createjs.Sound);
		var manifest = [
		{src:"sound/18-machinae_supremacy-lord_krutors_dominion.ogg",id:"music"},
		{src:"sound/Game-Shot.ogg",id:"laser"},
		{src:"sound/Game-Break.ogg",id:"break",  data:6},
		//{src:"img/one.png",id:"bitmap1"},
		//{src:"img/two.png",id:"bitmap2"}
		];
		queue.loadManifest(manifest,true);
		queue.addEventListener("fileload",handleFileLoad);
	        queue.addEventListener("progress", updateLoading);
		//queue.addEventListener("complete", doneLoading);
		queue.addEventListener("complete", loaded);

		//creating text object
			
		txt = new createjs.Text("Loading sound files. . .", "18px Arial");
		// position it on stage:
		txt.x = 0;
		txt.y = 0;
		stage.addChild(txt);
		
		//creating bitmap images object
		bitmap1 = new createjs.Bitmap( 'img/one.png' );
		bitmap2 = new createjs.Bitmap( 'img/two.png' );
		bitmap3 = new createjs.Bitmap( 'img/three.png' );
		//bitmap4 = new createjs.Bitmap( 'img/four.png' );
		//bitmap5 = new createjs.Bitmap( 'img/five.png' );
		
		//position them on the stage 
		bitmap1.x= 900;
		bitmap1.y= 200;
		bitmap1.name=0;
        	bitmap2.x= 800;
		bitmap2.y= 100;
		bitmap2.name=1;
		bitmap3.x= 700;
		bitmap3.y= 100;
		bitmap3.name=2;
		
		// Add bitmaps to container
		container = new createjs.Container();
		container.addChild(bitmap1, bitmap2, bitmap3, bitmap4, bitmap5);
		
		// add Container to the stage
		stage.addChild(container);
	
		//adding eventlistener to each object
		bitmap1.addEventListener("click", bitmap_clicked);
		bitmap2.addEventListener("click", bitmap_clicked);
		bitmap3.addEventListener("click", bitmap_clicked);
		//bitmap4.addEventListener("click", bitmap_clicked);
		//bitmap5.addEventListener("click", bitmap_clicked);
		
		//create ticker object and add event handler 
		createjs.Ticker.setFPS(20);
		createjs.Ticker.useRAF = true;
		createjs.Ticker.addEventListener("tick", handleTick);
	
		// call update on the stage to make it render the current display list to the canvas
		stage.update();
	}

	function handleTick() {
		//var totalnumber = container.getNumChildren();
		//console.log(totalnumber);
		//for(var i=0; i<totalnumber; i++)
		
		//bmp = container.getChildAt(i);
		//console.log(bmp.name);
		//console.log(container.getChildAt(0).name);
		if(bitmap1.x+dx>canvas.width || bitmap1.x+dx < 0)
		{
			dx=-dx;
		}
		if(bitmap1.y+dy>canvas.height || bitmap1.y+dy < 0)
		{
			dy=-dy;
		}
		bitmap1.x += dx;
		bitmap1.y += dy;
		container.addChild(bitmap1);
			
		if(bitmap2.x+dx2>canvas.width || bitmap2.x+dx2 < 0)
		{
			dx2=-dx2;
		}
		if(bitmap2.y+dy2>canvas.height || bitmap2.y+dy2 < 0)
		{
			dy2=-dy2;
		}
		bitmap2.x += Math.random()*dx2;
		bitmap2.y += dy2;
		container.addChild(bitmap2);

		if(bitmap3.x+dx3>canvas.width || bitmap3.x+dx3 < 0)
		{
			dx3=-dx3;
		}
		if(bitmap3.y+dy3>canvas.height || bitmap3.y+dy3 < 0)
		{
			dy3=-dy3;
		}
		bitmap3.x += Math.random()*dx3;
		bitmap3.y += dy3;
		container.addChild(bitmap3);
			
		
		stage.addChild(container);
		stage.update();
    	}

	function loaded(event) {
		console.log("in loaded function");
		//var music = createjs.Sound.play("music");
		//music.setVolume(0.1);
		//music.stop();
		//music.play("music");
		//createjs.Sound.play("music", createjs.Sound.INTERRUPT_NONE, 0, 0, -1, 0.4);
	}

	function updateLoading(event) {
	        var progress = event ? event.progress+0.5|0 : 0;
        	txt.text = "Loading " + progress + "%";
        	stage.update();
    	}
	
	function handleFileLoad(event){
//		var item = event.item;
//		var type = item.type;
//		if(createjs.LoadQueue.SOUND === type){
//			startSound(item.id);
//		}
	}

	function bitmap_clicked(event) {
		var clickedBitmap = container.getObjectUnderPoint(event.stageX, event.stageY);
		//window.alert(clickedBitmap.name);
		var totalnumber = container.getNumChildren();
		//window.alert(totalnumber);		
		if(3-totalnumber==clickedBitmap.name)
		{
			bitmap_popup1 = new createjs.Bitmap( 'img/one.png' );
			stage.addChild(bitmap_popup1);
			bitmap_popup1.addEventListener("click", bitmap_show_popup);
			window.alert("bitmap1");
			//container.removeChild(bitmap1);
			stage.removeAllChildren();
			container.removeAllChildren();
			stage.update();	
		}else
		if(3-totalnumber==clickedBitmap.name)
		{
		
			bitmap_popup1 = new createjs.Bitmap( 'img/two.png' );
			stage.addChild(bitmap_popup1);
			bitmap_popup1.addEventListener("click", bitmap_show_popup);
			stage.update();	
		}else
		if(3-totalnumber==clickedBitmap.name)
		{
		
			bitmap_popup1 = new createjs.Bitmap( 'img/three.png' );
			stage.addChild(bitmap_popup1);
			bitmap_popup1.addEventListener("click", bitmap_show_popup);
			stage.update();	
		}

		// play the shot sound
        	createjs.Sound.play("laser", createjs.Sound.INTERUPT_LATE);

	}

	function bitmap_show_popup(event) {
		
		//window.alert(event.target.name);
		//container.removeChild(bitmap1);		
		//stage.removeChild(bitmap1);
		stage.removeChild(bitmap_popup1);
	
		stage.update();
                // play sound
                createjs.Sound.play("break", createjs.Sound.INTERUPT_LATE, 0, 0.8);
	}
	
	</script>
</head>
	
<body onload="init();">

	<header id="header" class="EaselJS">
	    <h1><span class="text-product">かず　<strong>あそび</strong></span></h1>
	</header>

	<div class="canvasHolder">
		<canvas id="testCanvas" width="960" height="400"></canvas>
	</div>
</body>
</html>
